{"version":3,"sources":["reportWebVitals.js","lib/defaultTask.js","reducers/reducers.js","store.js","lib/initialTasks.js","modules/localStorage.js","components/TaskCreatorForm.js","components/ProgressBar.js","lib/pureFunctions.js","components/TaskPreview.js","components/TaskCreator.js","lib/time.js","components/TaskCard.js","components/TaskManager.js","assets/tomato-svgrepo-com.svg","components/navbar/NavBar.js","components/Timer.js","components/Button.js","components/CurrentSession.js","components/History.js","sounds/316837__lalks__alarm-02-short.wav","sounds/320492__lacezio__clock-chime.wav","App.js","actions.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultTask","id","task","sessionLengthInMinutes","breakLengthInMinutes","numberOfSessions","previewBlocks","alarmTimeStamps","timeStamp","status","elapsedTimeInSeconds","isPaused","isRunning","nextTimeStampIndex","nextTimeStamp","isPlaying","totalTimeSpentInSeconds","hasError","getState","state","getCurrentSessionId","currentSessionId","getCurrentTask","tasks","find","isSessionDefault","initialState","uuidv4","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","action","type","newTask","newTasks","taskToRemove","filter","newCurrentSessionId","currentState","map","current","composeWithDevTools","applyMiddleware","thunk","subscribe","stringify","setItem","saveState","TaskCreatorForm","onSubmit","onInput","className","htmlFor","value","min","max","ProgressBar","props","sessionBlockWidth","breakBlockWidth","currentWidth","sessionIsDefault","style","width","block","getTotalCycleLengthInMinutes","getBlockWidth","blockLengthInMinutes","totalCycleLengthInMinutes","getTotalCycleLengthInSeconds","TaskPreview","formValue","Fragment","TaskCreator","onTaskCreation","useState","taskData","setTaskData","setHasError","useEffect","prev","i","push","checkIfValueIsAboveLimit","inputName","length","choosePropertyById","validate","every","condition","createAlarmTimeStamps","lastTimeStamp","event","preventDefault","target","property","getHoursMinutesSecondsFromTotalSeconds","totalSeconds","Math","floor","concatenateTimeSegments","hours","minutes","seconds","TaskCard","onTaskPick","onTaskDelete","isCurrent","useSelector","hoursLeft","minutesLeft","secondsLeft","elapsedHours","elapsedMinutes","elapsedSeconds","onClick","ReactModal","setAppElement","TaskManager","showModal","setShowModal","taskToDelete","setTaskToDelete","handleTaskDelete","handleOpenModal","handleCloseModal","index","isOpen","contentLabel","onRequestClose","overlayClassName","shouldCloseOnOverlayClick","_extends","Object","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","SvgTomatoSvgrepoCom","_ref","svgRef","title","titleId","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","ref","fill","d","ForwardRef","NavBar","splitLocation","useLocation","pathname","split","exact","to","Timer","timeLeftInSeconds","Button","role","roleClassnames","disabled","CurrentSession","onStart","onStop","onTogglePause","currentSession","totalCycleLengthInSeconds","getTimeLeftInSeconds","getCurrentWidth","CurrentSessionEmpty","History","csvData","forEach","createCSVData","data","filename","headers","App","dispatch","useDispatch","setElapsedTimeInSeconds","setIsRunning","setIsPaused","setIsPlaying","setNextTimeStampIndex","setNextTimeStamp","intervalID","useRef","audioRef","startTimer","window","setInterval","handleStart","stopTimer","clearInterval","handleStop","togglePause","updateTask","handleTaskCreation","handleTaskPick","indexToRemove","pickTask","deleteTask","audioSrc","sessionEndsAlarmSfx","breakEndsAlarmSfx","src","autoPlay","loop","playAlarm","render","location","TransitionGroup","CSSTransition","timeout","classNames","path","ReactDOM","component","document","getElementById"],"mappings":"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","file":"static/js/main.c6a8762b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const defaultTask ={\r\n        id: \"default\",\r\n        task: \"\",\r\n        sessionLengthInMinutes: 25,\r\n        breakLengthInMinutes: 5,\r\n        numberOfSessions: 4,\r\n        previewBlocks: [\"session\", \"break\", \"session\", \"break\",\"session\", \"break\",\"session\"],\r\n        alarmTimeStamps: [{timeStamp: 1500, status: \"sessionEnded\"}],\r\n        elapsedTimeInSeconds: 0,\r\n        isPaused: false,\r\n        isRunning: false,\r\n        nextTimeStampIndex: 0,\r\n        nextTimeStamp: \"\",\r\n        isPlaying: false,\r\n        totalTimeSpentInSeconds: 0,\r\n        hasError: false\r\n}\r\n\r\nexport default defaultTask;","import defaultTask from \"../lib/defaultTask\";\r\n\r\n  export function stateReducer(state = {}, action = {}) {\r\n\r\n    if (action.type === \"TASK_CREATE\") {\r\n      \r\n      const { newTask } = action;\r\n      const newTasks = [...state.tasks, newTask];\r\n      \r\n      return {\r\n        ...state,\r\n        tasks: newTasks\r\n      };\r\n    }\r\n  \r\n    if (action.type === \"TASK_DELETE\") {\r\n      const { taskToRemove } = action;\r\n      const tasks = state.tasks.filter(\r\n        (task) => task.id !== taskToRemove.id \r\n      );\r\n      const newCurrentSessionId = state.currentSessionId!==taskToRemove.id ? state.currentSessionId : \"default\"\r\n      return {\r\n        ...state,\r\n        tasks,\r\n        currentSessionId: newCurrentSessionId\r\n      };\r\n    }\r\n  \r\n    if (action.type === \"TASK_PICK\") {\r\n      const {task} = action;\r\n      return {\r\n        ...state,\r\n        currentSessionId: task.id\r\n      };\r\n    }\r\n    if (action.type === \"TASK_UPDATE\") {\r\n      \r\n      const { currentState, id } = action;\r\n      const tasks = state.tasks.map(task=>task.id === id ? {...task, ...currentState.current} : task)\r\n      return {\r\n        ...state,\r\n        tasks\r\n      };\r\n  \r\n    }\r\n    else return state\r\n  }\r\n\r\n\r\n  ///SELECTORS\r\n\r\n  export const getState =(state) =>state;\r\n  export const getCurrentSessionId =(state) =>state.currentSessionId;\r\n  export const getCurrentTask = (state) => state.tasks.find(task => task.id === getCurrentSessionId(state)) || defaultTask;\r\n  export const isTaskCurrent = (state, task) => getCurrentSessionId(state) === task.id;\r\n  export const isSessionDefault = (state) => getCurrentSessionId(state) === \"default\";","import thunk from \"redux-thunk\";\r\nimport {createStore, applyMiddleware} from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport {loadState, saveState} from \"./modules/localStorage\";\r\nimport {stateReducer} from \"./reducers/reducers\"\r\nimport initialTasks from \"./lib/initialTasks\";\r\n\r\nconst initialState = {\r\n  tasks: initialTasks,\r\n  currentSessionId: \"default\"\r\n}\r\n\r\nconst persistedState = loadState() || initialState ;\r\n\r\nexport const store= createStore(stateReducer, persistedState, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nstore.subscribe(() => {\r\n  saveState({\r\n    tasks: store.getState().tasks,\r\n  currentSessionId: store.getState().currentSessionId,\r\n  });\r\n});\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst initialTasks = [\r\n    {\r\n        id: uuidv4(),\r\n        task: \"Learning React\",\r\n        sessionLengthInMinutes: 25,\r\n        breakLengthInMinutes: 5,\r\n        numberOfSessions: 4,\r\n        previewBlocks: [\r\n          \"session\",\r\n          \"break\",\r\n          \"session\",\r\n          \"break\",\r\n          \"session\",\r\n          \"break\",\r\n          \"session\",\r\n        ],\r\n        elapsedTimeInSeconds: 0,\r\n        isPaused: false,\r\n        isRunning: false,\r\n        alarmTimeStamps: [{timeStamp: 1500, status: \"sessionEnded\"},\r\n       {timeStamp: 1800, status: \"breakEnded\"},\r\n       {timeStamp: 3300, status: \"sessionEnded\"},\r\n       {timeStamp: 3600, status: \"breakEnded\"},\r\n       {timeStamp: 5100, status: \"sessionEnded\"},\r\n       {timeStamp: 5400, status: \"breakEnded\"},\r\n       {timeStamp: 6900, status: \"sessionEnded\"}\r\n    \r\n    ],\r\n      nextTimeStampIndex: 0,\r\n      nextTimeStamp: \"\",\r\n      isPlaying: false,\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        task: \"Learning Agular\",\r\n        sessionLengthInMinutes: 25,\r\n        breakLengthInMinutes: 5,\r\n        numberOfSessions: 4,\r\n        previewBlocks: [\r\n          \"session\",\r\n          \"break\",\r\n          \"session\",\r\n          \"break\",\r\n          \"session\",\r\n          \"break\",\r\n          \"session\",\r\n        ],\r\n        elapsedTimeInSeconds: 0,\r\n        isPaused: false,\r\n        isRunning: false,\r\n        alarmTimeStamps: [{timeStamp: 1500, status: \"sessionEnded\"},\r\n       {timeStamp: 1800, status: \"breakEnded\"},\r\n       {timeStamp: 3300, status: \"sessionEnded\"},\r\n       {timeStamp: 3600, status: \"breakEnded\"},\r\n       {timeStamp: 5100, status: \"sessionEnded\"},\r\n       {timeStamp: 5400, status: \"breakEnded\"},\r\n       {timeStamp: 6900, status: \"sessionEnded\"}\r\n    \r\n    ],\r\n      nextTimeStampIndex: 0,\r\n      nextTimeStamp: \"\",\r\n      isPlaying: false,\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        task: \"Learning Vue\",\r\n        sessionLengthInMinutes: 25,\r\n        breakLengthInMinutes: 5,\r\n        numberOfSessions: 4,\r\n        previewBlocks: [\r\n          \"session\",\r\n          \"break\",\r\n          \"session\",\r\n          \"break\",\r\n          \"session\",\r\n          \"break\",\r\n          \"session\",\r\n        ],\r\n        elapsedTimeInSeconds: 0,\r\n        isPaused: false,\r\n        isRunning: false,\r\n        alarmTimeStamps: [{timeStamp: 1500, status: \"sessionEnded\"},\r\n         {timeStamp: 1800, status: \"breakEnded\"},\r\n         {timeStamp: 3300, status: \"sessionEnded\"},\r\n         {timeStamp: 3600, status: \"breakEnded\"},\r\n         {timeStamp: 5100, status: \"sessionEnded\"},\r\n         {timeStamp: 5400, status: \"breakEnded\"},\r\n         {timeStamp: 6900, status: \"sessionEnded\"}\r\n      \r\n      ],\r\n        nextTimeStampIndex: 0,\r\n        nextTimeStamp: \"\",\r\n        isPlaying: false,\r\n    }\r\n    ]\r\n\r\n    export default initialTasks;","export const loadState = () => {\r\n    try {\r\n      const serializedState = localStorage.getItem('state');\r\n      if (serializedState === null) {\r\n        return undefined;\r\n      }\r\n      return JSON.parse(serializedState);\r\n    } catch (err) {\r\n      return undefined;\r\n    }\r\n  }; \r\n\r\n  export const saveState = (state) => {\r\n    try {\r\n      const serializedState = JSON.stringify(state);\r\n      localStorage.setItem('state', serializedState);\r\n    } catch {\r\n      // ignore write errors\r\n    }\r\n  };","function TaskCreatorForm({\r\n  onSubmit,\r\n  task,\r\n  sessionLengthInMinutes,\r\n  breakLengthInMinutes,\r\n  numberOfSessions,\r\n  hasError,\r\n  onInput\r\n}) {\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form\r\n        onSubmit={onSubmit}\r\n        className=\"form\"\r\n      >\r\n        <label htmlFor=\"task-name\" className=\"form__label\">\r\n          What are you doing?\r\n        </label>\r\n        <input\r\n            id=\"task-name\"\r\n            value={task}\r\n            onInput={onInput}\r\n            className=\"form__input\"\r\n            type=\"text\"\r\n          />\r\n          {hasError && <p className=\"form__error\">Make sure that task name is no more than 40 characters long</p>}\r\n        <label htmlFor=\"session-length\" className=\"form__label\">\r\n          Set session length in minutes\r\n        </label>\r\n        <input\r\n            id=\"session-length\"\r\n            value={sessionLengthInMinutes}\r\n            onInput={onInput}\r\n            className=\"form__input\"\r\n            type=\"number\"\r\n            // min=\"1\"\r\n          />\r\n          {hasError && <p className=\"form__error\">Make sure that session length is in 10 to 60 minute range</p>}\r\n        <label htmlFor=\"break-length\" className=\"form__label\">\r\n          Set break length in minutes\r\n        </label>\r\n        <input\r\n            id=\"break-length\"\r\n            value={breakLengthInMinutes}\r\n            onInput={onInput}\r\n            className=\"form__input\"\r\n            type=\"number\"\r\n            min=\"1\"\r\n          />\r\n          {hasError && <p className=\"form__error\">Make sure that break length is in 5 to 60 minute range</p>}\r\n        <label htmlFor=\"sessions-count\" className=\"form__label\">\r\n          Number of sessions\r\n        </label>\r\n        <input\r\n            id=\"sessions-count\"\r\n            value={numberOfSessions}\r\n            onInput={onInput}\r\n            className=\"form__input\"\r\n            type=\"number\"\r\n            min=\"1\"\r\n            max=\"10\"\r\n          />\r\n          {hasError && <p className=\"form__error\">Make sure that number of sessions is 1 to 10</p>}\r\n        <button className=\"button\">\r\n          Accept\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskCreatorForm;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction ProgressBar(props) {\r\n  const {\r\n    task,\r\n    sessionLengthInMinutes,\r\n    breakLengthInMinutes,\r\n    previewBlocks,\r\n    sessionBlockWidth,\r\n    breakBlockWidth,\r\n    isPaused,\r\n    currentWidth,\r\n    sessionIsDefault\r\n  } = props;\r\n\r\n  return (\r\n    <div className={`progress-bar ${isPaused || sessionIsDefault ? \"progress-bar--disabled\" : \"\"}`}>\r\n      <h2 className=\"progress-bar__task-name\">{task}</h2>\r\n      <div className=\"progress-bar__bar\">\r\n        <div\r\n          style={{width: `${currentWidth || 0}%` }}\r\n          className=\"progress-bar__progress\"\r\n        ></div>\r\n        <div className=\"session-blocks\">\r\n        {previewBlocks.map((block) => {\r\n          return block === \"session\" ? (\r\n            <div\r\n              key={uuidv4()}\r\n              style={{ width: `${sessionBlockWidth}%` }}\r\n              className=\"session-block session-block--session\"\r\n            >\r\n              <p className=\"session-block__length session-block__length--black\">{sessionLengthInMinutes}</p>\r\n            </div>\r\n          ) : (\r\n            <div\r\n              key={uuidv4()}\r\n              style={{ width: `${breakBlockWidth}%` }}\r\n              className=\"session-block session-block--break\"\r\n            >\r\n              <p className=\"session-block__length session-block__length--white\">{breakLengthInMinutes}</p>\r\n            </div>\r\n          );\r\n        })}\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProgressBar;\r\n","export const getTotalCycleLengthInMinutes = (numberOfSessions, sessionLengthInMinutes, breakLengthInMinutes) => numberOfSessions * sessionLengthInMinutes + breakLengthInMinutes * (numberOfSessions - 1)\r\n\r\nexport const getBlockWidth = (blockLengthInMinutes, totalCycleLengthInMinutes) => blockLengthInMinutes / totalCycleLengthInMinutes * 100;\r\n\r\nexport const getTotalCycleLengthInSeconds = (numberOfSessions, sessionLengthInMinutes, breakLengthInMinutes) => (numberOfSessions * sessionLengthInMinutes + breakLengthInMinutes * (numberOfSessions - 1)) * 60;\r\n\r\nexport const getTimeLeftInSeconds = (totalCycleLengthInSeconds, elapsedTimeInSeconds) => totalCycleLengthInSeconds - elapsedTimeInSeconds;\r\n\r\nexport const getCurrentWidth = (totalCycleLengthInSeconds, timeLeftInSeconds) => ((totalCycleLengthInSeconds - timeLeftInSeconds) / totalCycleLengthInSeconds) * 100;","import React from \"react\";\r\n\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nimport {getTotalCycleLengthInMinutes, getBlockWidth} from \"../lib/pureFunctions\"\r\n\r\nfunction TaskPreview({ formValue }) {\r\n  const {\r\n    task,\r\n    previewBlocks,\r\n    sessionLengthInMinutes,\r\n    breakLengthInMinutes,\r\n    numberOfSessions,\r\n  } = formValue;\r\n  const totalCycleLengthInMinutes = getTotalCycleLengthInMinutes(numberOfSessions, sessionLengthInMinutes, breakLengthInMinutes);\r\n  const sessionBlockWidth = getBlockWidth(sessionLengthInMinutes, totalCycleLengthInMinutes);\r\n  const breakBlockWidth = getBlockWidth(breakLengthInMinutes, totalCycleLengthInMinutes);\r\n  return (\r\n    <React.Fragment>\r\n    <h2 className=\"progress-bar__task-name\">Preview</h2>\r\n    <ProgressBar\r\n    task={task}\r\n    sessionLengthInMinutes={sessionLengthInMinutes}\r\n    breakLengthInMinutes={breakLengthInMinutes}\r\n    previewBlocks={previewBlocks}\r\n    sessionBlockWidth={sessionBlockWidth}\r\n    breakBlockWidth={breakBlockWidth}\r\n    />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TaskPreview;\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\nimport TaskCreatorForm from \"./TaskCreatorForm\";\r\nimport TaskPreview from \"./TaskPreview\";\r\n\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport defaultTask from \"../lib/defaultTask\"\r\n\r\nfunction TaskCreator({onTaskCreation}){\r\n  \r\n  const [taskData, setTaskData] = useState(defaultTask)\r\n  const [hasError, setHasError] = useState(false)\r\n\r\n  const {numberOfSessions, breakLengthInMinutes, sessionLengthInMinutes, task} = taskData;\r\n  \r\nuseEffect(()=>{\r\n  function createPreviewBlocks(){\r\n    setTaskData(\r\n      (prev) => {\r\n        const previewBlocks = [];\r\n        for (let i = 1; i <= numberOfSessions; i++) {\r\n          if (i < numberOfSessions) {\r\n            previewBlocks.push(\"session\", \"break\");\r\n          } else {\r\n            previewBlocks.push(\"session\");\r\n          }\r\n        }\r\n        return {...prev, previewBlocks };\r\n      },\r\n    );\r\n  };\r\n  createPreviewBlocks();\r\n},[numberOfSessions])\r\n\r\n  const handleSubmit = (event)=>{\r\n    event.preventDefault()\r\n    if(validate()){\r\n      onTaskCreation({...taskData, id: uuidv4(), alarmTimeStamps: createAlarmTimeStamps() })\r\n      setTaskData({...defaultTask})\r\n    } \r\n    else setHasError(true)\r\n  }\r\n\r\n\r\nconst handleInputChange = (event) =>{\r\n  const id=event.target.id;\r\n  const value = event.target.value;\r\n  const property = choosePropertyById(id)\r\n \r\n  checkIfValueIsAboveLimit(id, value) && setTaskData(prev=>{\r\n    return {...prev, [property]: value }\r\n  });\r\n  \r\n}\r\n\r\n  const checkIfValueIsAboveLimit = (inputName, value) => {\r\n    const inputsUpperLimits = {\r\n      \"task-name\": value.length <= 40,\r\n      \"session-length\": value <= 60,\r\n      \"break-length\": value <= 60,\r\n      \"sessions-count\": value <= 10,\r\n    }\r\n    return inputsUpperLimits[inputName]\r\n  }\r\n\r\n  const choosePropertyById = (id) => {\r\n    const properties = {\r\n      \"task-name\": 'task',\r\n      \"session-length\": 'sessionLengthInMinutes',\r\n      \"break-length\": 'breakLengthInMinutes',\r\n      \"sessions-count\": 'numberOfSessions',\r\n    }\r\n    return properties[id]\r\n  }\r\n\r\n  const validate = () =>{\r\n    const conditions = [\r\n      (task.length > 0 && task.length <= 40),\r\n      sessionLengthInMinutes >= 10 && sessionLengthInMinutes <= 60,\r\n      breakLengthInMinutes >= 5 && breakLengthInMinutes <= 60,\r\n      numberOfSessions > 0 && numberOfSessions <= 10,\r\n    ]\r\n\r\n    return conditions.every(condition=>condition===true);\r\n  }\r\n\r\n  const createAlarmTimeStamps = () =>{\r\n\r\n    const alarmTimeStamps = [];\r\n    let lastTimeStamp = 0;\r\n    for (let i = 1; i <= numberOfSessions; i++) {\r\n      \r\n      if (i < numberOfSessions) {\r\n        lastTimeStamp = lastTimeStamp + sessionLengthInMinutes*60\r\n        alarmTimeStamps.push({timeStamp: lastTimeStamp, status: \"sessionEnded\"});\r\n        lastTimeStamp = lastTimeStamp + breakLengthInMinutes*60\r\n        alarmTimeStamps.push({timeStamp: lastTimeStamp, status: \"breakEnded\"});\r\n      } else{\r\n        lastTimeStamp = lastTimeStamp + sessionLengthInMinutes*60\r\n        alarmTimeStamps.push({timeStamp: lastTimeStamp, status: \"sessionEnded\"});\r\n      }\r\n    }\r\n    return alarmTimeStamps\r\n  }\r\n\r\n  \r\n\r\n    return (\r\n      <div className=\"task-creator\">\r\n        <h1 className=\"task-creator__heading\">TASK CREATOR</h1>\r\n        <TaskCreatorForm\r\n          hasError ={hasError}\r\n          task={task}\r\n          sessionLengthInMinutes={sessionLengthInMinutes}\r\n          breakLengthInMinutes={breakLengthInMinutes}\r\n          numberOfSessions={numberOfSessions}\r\n          onSubmit={handleSubmit}\r\n          onInput = {handleInputChange}\r\n        />\r\n        <TaskPreview formValue={taskData} />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default TaskCreator;\r\n","\r\n\r\nconst SECONDS_IN_HOUR = 3600;\r\nconst SECONDS_IN_MINUTE = 60;\r\n\r\nfunction getHoursMinutesSecondsFromTotalSeconds(totalSeconds){\r\n    const hours = Math.floor(totalSeconds / SECONDS_IN_HOUR);\r\n    const minutes = Math.floor((totalSeconds % SECONDS_IN_HOUR) / SECONDS_IN_MINUTE);\r\n    const seconds = Math.floor(totalSeconds % SECONDS_IN_MINUTE);\r\n\r\n    return [hours, minutes, seconds]\r\n}\r\n\r\nfunction concatenateTimeSegments(hours, minutes, seconds){\r\n\r\nreturn `${hours < 10 ? \"0\" + hours : hours}:${minutes < 10 ? \"0\" + minutes : minutes}:${seconds < 10 ? \"0\" + seconds : seconds}`\r\n}\r\n\r\nexport {getHoursMinutesSecondsFromTotalSeconds, concatenateTimeSegments }","import {useSelector} from \"react-redux\";\r\n\r\nimport {getCurrentTask} from \"../reducers/reducers\"\r\n\r\n\r\nimport {getHoursMinutesSecondsFromTotalSeconds, concatenateTimeSegments} from \"../lib/time\";\r\nimport {getTotalCycleLengthInSeconds} from \"../lib/pureFunctions\"\r\n\r\nfunction TaskCard(props) {\r\n\r\n    const {task, onTaskPick, onTaskDelete} = props\r\n    const {\r\n        numberOfSessions,\r\n        sessionLengthInMinutes,\r\n        breakLengthInMinutes,\r\n        elapsedTimeInSeconds,\r\n      } = task;\r\n\r\n      const isCurrent = useSelector(getCurrentTask)===task;\r\n      \r\n      const totalCycleLengthInSeconds = getTotalCycleLengthInSeconds(numberOfSessions, sessionLengthInMinutes, breakLengthInMinutes);\r\n      \r\n      const [hoursLeft, minutesLeft, secondsLeft] = getHoursMinutesSecondsFromTotalSeconds(totalCycleLengthInSeconds);\r\n      const [elapsedHours, elapsedMinutes, elapsedSeconds] = getHoursMinutesSecondsFromTotalSeconds(elapsedTimeInSeconds);\r\n      \r\n  return (\r\n    <li className={`task-card ${isCurrent ? 'task-card--active' : \"\"}`}>\r\n      <h4 className=\"task-card__heading\">{task.task} {isCurrent ? '(Active)' : \"\"}</h4>\r\n        <div className=\"task-card__info-container\">\r\n          <div className=\"task-card__info\">\r\n            Total time <span>{concatenateTimeSegments(hoursLeft, minutesLeft, secondsLeft)}</span>\r\n          </div>\r\n          <div className=\"task-card__info\">Sessions <span>{numberOfSessions}</span></div>\r\n          <div className=\"task-card__info\">Session length <span>{sessionLengthInMinutes} minutes</span> </div>\r\n          <div className=\"task-card__info\">Break length <span>{breakLengthInMinutes} minutes</span> </div>\r\n          <div className=\"task-card__info\">\r\n            Progress <span>{concatenateTimeSegments(elapsedHours, elapsedMinutes, elapsedSeconds)}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"task-card__buttons\">\r\n        <button\r\n          onClick={() => {\r\n            onTaskPick(task);\r\n          }}\r\n          className=\"button button--small\"\r\n        >\r\n          Pick\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            onTaskDelete(task);\r\n          }}\r\n          className=\"button button--small\"\r\n        >\r\n          Delete\r\n        </button>\r\n        </div>\r\n        \r\n      \r\n    </li>\r\n  );\r\n}\r\n\r\nexport default TaskCard;","import React, {useState} from \"react\";\r\nimport ReactModal from 'react-modal';\r\n\r\nimport TaskCard from \"./TaskCard\"\r\n\r\nReactModal.setAppElement('#root');\r\n\r\nfunction TaskManager({ tasks, onTaskPick, onTaskDelete}){\r\n \r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [taskToDelete, setTaskToDelete] = useState(\"\");\r\n      \r\n  const handleTaskDelete = (task) =>{\r\n    setTaskToDelete(task);\r\n    handleOpenModal();\r\n  }\r\n\r\n  const handleDeleteConfirm = () =>{\r\n    onTaskDelete(taskToDelete);\r\n    handleCloseModal();\r\n  }\r\n\r\n  const handleDeleteCancel = () =>{\r\n    setTaskToDelete(\"\");\r\n    handleCloseModal();\r\n  }\r\n\r\n  const handleOpenModal = () =>{\r\n    setShowModal(true);\r\n  }\r\n  \r\n  const handleCloseModal =() =>{\r\n    setShowModal(false);\r\n  }\r\n  \r\n    return (\r\n    <div className=\"task-manager\">\r\n      <h2 className=\"task-manager__heading\">Task Manager</h2>\r\n      <ul className=\"task-manager__list\">\r\n        {tasks.map((task, index) => {\r\n          \r\n          return (\r\n            <TaskCard key={task.id} task={task} onTaskPick={onTaskPick} onTaskDelete={handleTaskDelete} index={index} />\r\n          );\r\n        })}\r\n      </ul>\r\n      <ReactModal \r\n         isOpen={showModal}\r\n         contentLabel=\"onRequestClose Example\"\r\n         onRequestClose={handleCloseModal}\r\n         className=\"modal\"\r\n         overlayClassName=\"overlay\"\r\n         shouldCloseOnOverlayClick={false}\r\n      >\r\n        <p className=\"modal__text\">Are you sure you want to delete task: <span>{taskToDelete.task}</span></p>\r\n        <button className=\"button\" onClick={handleDeleteConfirm}>Yes</button>\r\n        <button className=\"button\" onClick={handleDeleteCancel}>No</button>\r\n      </ReactModal>\r\n    </div>\r\n  )\r\n  }\r\n\r\nexport default TaskManager;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nfunction SvgTomatoSvgrepoCom(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 51.679 51.679\",\n    style: {\n      enableBackground: \"new 0 0 51.679 51.679\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#88C057\"\n    },\n    d: \"M40.47,8.458c-2.562-1.642-7.374-3.93-11.997-1.816c-0.445,0.204-0.952-0.117-0.952-0.607V1.786 C27.522,0.804,26.855,0,26.04,0h-2.223c-0.815,0-1.482,0.804-1.482,1.786v4.501c0,0.425-0.385,0.747-0.802,0.661 c-1.877-0.387-6.751-0.989-11.412,1.795c-0.638,0.381-0.268,1.381,0.464,1.247c2.17-0.397,5.026-0.67,6.956,0.092 c0.506,0.199,0.579,0.891,0.124,1.189c-1.371,0.895-3.9,2.953-5.557,6.737c-0.282,0.644,0.51,1.221,1.053,0.774 c2.117-1.744,5.6-4.107,8.554-3.726c0.348,0.045,0.612,0.329,0.607,0.68c-0.03,1.982-0.005,8.716,1.632,11.265 c0.258,0.402,0.836,0.422,1.117,0.035c1.043-1.433,3.304-5.233,3.211-11.167c-0.006-0.39,0.307-0.707,0.697-0.694 c1.49,0.048,5.008,0.469,7.798,3.194c0.457,0.447,1.214,0.061,1.134-0.573c-0.219-1.735-1.174-4.359-4.631-6.394 c-0.525-0.309-0.436-1.095,0.155-1.24c1.194-0.293,3.252-0.572,6.644-0.46C40.768,9.723,41.049,8.829,40.47,8.458z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#D13834\"\n    },\n    d: \"M41.248,9.99c-0.093-0.065-0.201-0.106-0.314-0.12c-0.4-0.049-0.801-0.095-1.201-0.149 c-0.143-0.014-0.287-0.025-0.429-0.039c-2.914-0.048-4.743,0.206-5.846,0.474c-0.599,0.146-0.707,0.931-0.175,1.244 c3.457,2.035,4.411,4.659,4.63,6.393c0.08,0.634-0.677,1.02-1.134,0.573c-2.79-2.724-6.308-3.145-7.798-3.194 c-0.39-0.013-0.704,0.304-0.697,0.694c0.092,5.934-2.168,9.734-3.211,11.167c-0.282,0.387-0.859,0.367-1.117-0.035 c-1.637-2.549-1.662-9.283-1.632-11.265c0.005-0.35-0.259-0.635-0.607-0.68c-2.954-0.382-6.437,1.982-8.554,3.726 c-0.543,0.447-1.335-0.13-1.053-0.774c1.655-3.779,4.18-5.836,5.552-6.733c0.457-0.299,0.381-0.994-0.128-1.19 c-0.371-0.143-0.776-0.249-1.203-0.324c-0.076-0.014-0.157-0.015-0.234-0.004c-2.425,0.33-4.807,0.791-7.119,1.411 c-0.102,0.027-0.197,0.076-0.278,0.144c-5.103,4.246-8.307,10.359-8.307,17.156c0,12.821,11.393,23.214,25.446,23.214 s25.446-10.393,25.446-23.214C51.286,20.928,47.348,14.23,41.248,9.99z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#ED7161\"\n    },\n    d: \"M5.791,34.636c-0.342,0-0.675-0.175-0.861-0.49C4.182,32.883,3.692,31.488,3.473,30 c-0.08-0.547,0.298-1.055,0.844-1.135c0.556-0.086,1.055,0.298,1.135,0.844c0.178,1.213,0.593,2.395,1.199,3.418 c0.281,0.475,0.125,1.089-0.351,1.37C6.14,34.591,5.964,34.636,5.791,34.636z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#ED7161\"\n    },\n    d: \"M4.588,26.678c-0.023,0-0.047-0.001-0.07-0.003c-0.552-0.038-0.967-0.516-0.929-1.066 c0.094-1.327,0.366-2.616,0.811-3.834c0.189-0.519,0.761-0.783,1.283-0.596c0.519,0.189,0.785,0.764,0.596,1.283 c-0.381,1.041-0.614,2.146-0.694,3.285C5.548,26.275,5.109,26.678,4.588,26.678z\"\n  })), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTomatoSvgrepoCom);\nexport default __webpack_public_path__ + \"static/media/tomato-svgrepo-com.4a700a47.svg\";\nexport { ForwardRef as ReactComponent };","import { NavLink } from \"react-router-dom\";\r\nimport { ReactComponent as Tomato } from '../../assets/tomato-svgrepo-com.svg';\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction NavBar() {\r\n\r\n  const location = useLocation();\r\n  const { pathname } = location;\r\n  const splitLocation = pathname.split(\"/\");\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <Tomato className=\"navbar__icon\"/>\r\n      <ul className=\"navbar__list\">\r\n        <li className={`navbar__link ${splitLocation[1] === \"\" ? \"navbar__link--active\" : \"\"}`}>\r\n          <NavLink exact to=\"/\">Current Session</NavLink>\r\n        </li>\r\n        <li className={`navbar__link ${splitLocation[1] === \"task-creator\" ? \"navbar__link--active\" : \"\"}`}>\r\n          <NavLink to=\"/task-creator\">Task Creator</NavLink>\r\n        </li>\r\n        <li className={`navbar__link ${splitLocation[1] === \"task-manager\" ? \"navbar__link--active\" : \"\"}`}>\r\n          <NavLink to=\"/task-manager\">Task Manager</NavLink>\r\n        </li>\r\n        <li className={`navbar__link ${splitLocation[1] === \"history\" ? \"navbar__link--active\" : \"\"}`}>\r\n          <NavLink to=\"/history\">History</NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import {\r\n  getHoursMinutesSecondsFromTotalSeconds,\r\n  concatenateTimeSegments\r\n  } from \"../lib/time\";\r\n\r\nfunction Timer({ timeLeftInSeconds }) {\r\n  const [hours, minutes, seconds]= getHoursMinutesSecondsFromTotalSeconds(timeLeftInSeconds);\r\n  return (\r\n    <div className=\"timer\">\r\n      {concatenateTimeSegments(hours, minutes, seconds)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","\r\nexport default function Button(props) {\r\n    const { isRunning, onClick, role, isPaused, sessionIsDefault } = props;\r\n    \r\n    const roleClassnames = {\r\n        \"Start\": `button ${isRunning || sessionIsDefault ? \"button--disabled\" : \"\"}`,\r\n        \"Stop\": `button ${isRunning ? \"\" : \"button--disabled\"}`,\r\n        \"Pause/Resume\": `button ${isRunning ? \"\" : \"button--disabled\"}`,\r\n    }\r\n\r\n    return <button\r\n        disabled={role === 'Start' ? isRunning : !isRunning}\r\n        onClick={onClick}\r\n        className={roleClassnames[role]}>\r\n        {role !== \"Pause/Resume\" ? role : isPaused ? \"Resume\" : \"Pause\"}\r\n    </button>\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport Timer from \"./Timer\";\r\nimport Button from \"./Button\";\r\n\r\nimport {getTotalCycleLengthInMinutes, getBlockWidth, getTotalCycleLengthInSeconds, getTimeLeftInSeconds, getCurrentWidth} from \"../lib/pureFunctions\";\r\nimport {isSessionDefault} from\"../reducers/reducers\";\r\n\r\nfunction CurrentSession({ onStart, onStop, onTogglePause, currentSession, elapsedTimeInSeconds, isPaused}) {\r\n\r\n  const {\r\n    sessionLengthInMinutes,\r\n    numberOfSessions,\r\n    previewBlocks,\r\n    task,\r\n    breakLengthInMinutes,\r\n    isRunning\r\n  } = currentSession;\r\n\r\n  const sessionIsDefault = useSelector(isSessionDefault)\r\n\r\n  const totalCycleLengthInSeconds = getTotalCycleLengthInSeconds(numberOfSessions, sessionLengthInMinutes, breakLengthInMinutes);\r\n    \r\n  const totalCycleLengthInMinutes = getTotalCycleLengthInMinutes(numberOfSessions, sessionLengthInMinutes, breakLengthInMinutes);\r\n  \r\n  const sessionBlockWidth = getBlockWidth(sessionLengthInMinutes, totalCycleLengthInMinutes);\r\n   \r\n  const breakBlockWidth = getBlockWidth(breakLengthInMinutes, totalCycleLengthInMinutes);\r\n\r\n  const timeLeftInSeconds = getTimeLeftInSeconds(totalCycleLengthInSeconds, elapsedTimeInSeconds);\r\n\r\n  const currentWidth = getCurrentWidth(totalCycleLengthInSeconds, timeLeftInSeconds);\r\n\r\n  return (\r\n    <div className=\"current-session\">\r\n      <h1 className=\"current-session__heading\">\r\n        {sessionIsDefault ? \"No current session! Pick or create a task!\" : `Current Session ${isPaused ? \"(Paused)\" : \"\"}`}\r\n      </h1>\r\n      <Timer timeLeftInSeconds={timeLeftInSeconds} />\r\n      <ProgressBar\r\n        isPaused={isPaused}\r\n        sessionLengthInMinutes={sessionLengthInMinutes}\r\n        breakLengthInMinutes={breakLengthInMinutes}\r\n        sessionBlockWidth={sessionBlockWidth}\r\n        breakBlockWidth={breakBlockWidth}\r\n        previewBlocks={previewBlocks}\r\n        task={task}\r\n        currentWidth={currentWidth}\r\n        sessionIsDefault={sessionIsDefault}\r\n      />\r\n      <div className=\"current-session__buttons\">\r\n        <Button role=\"Start\" isRunning={isRunning} onClick={onStart} sessionIsDefault={sessionIsDefault}/>\r\n        <Button role=\"Stop\" isRunning={isRunning} onClick={onStop} />\r\n        <Button\r\n          role=\"Pause/Resume\"\r\n          isRunning={isRunning}\r\n          isPaused={isPaused}\r\n          onClick={onTogglePause}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CurrentSessionEmpty(){\r\n  return (\r\n    <div className=\"current-session\">\r\n      <h1 className=\"current-session__heading\">\r\n        No active tasks\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport {CurrentSession, CurrentSessionEmpty};\r\n","import React from \"react\";\r\nimport {\r\n  getHoursMinutesSecondsFromTotalSeconds,\r\n  concatenateTimeSegments,\r\n} from \"../lib/time\";\r\n\r\nimport { CSVLink } from \"react-csv\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction History({ tasks }) {\r\n  \r\n  const csvData = createCSVData();\r\n\r\n  function createCSVData() {\r\n    let csvData = [];\r\n    tasks.forEach((task) => {\r\n      csvData.push([task.task, task.elapsedTimeInSeconds]);\r\n    });\r\n    return csvData;\r\n  }\r\n\r\n  return (\r\n    <div className=\"history\">\r\n      <h1 className=\"history__header\">History</h1>\r\n      <table className=\"history__table\">\r\n        <thead className=\"history__thead\">\r\n          <tr className=\"history__tr\">\r\n            <th className=\"history__th\">Task</th>\r\n            <th className=\"history__th\">Total time spent</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"history__tbody\">\r\n          {tasks.map((task) => {\r\n            const [hours, minutes, seconds] = getHoursMinutesSecondsFromTotalSeconds(task.elapsedTimeInSeconds)\r\n            return (\r\n              <tr key={uuidv4()} className=\"history__tr\">\r\n                <td className=\"history__td\">{task.task}</td>\r\n                <td className=\"history__td\">\r\n                  {concatenateTimeSegments(\r\n                    hours,\r\n                    minutes,\r\n                    seconds\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <CSVLink\r\n        data={csvData}\r\n        filename={\"my-file.csv\"}\r\n        headers={[\"task name\", \"total time spent\"]}\r\n        className={`button history__button`}\r\n      >\r\n        Generate CSV report\r\n      </CSVLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default History;\r\n","export default __webpack_public_path__ + \"static/media/316837__lalks__alarm-02-short.44287d4b.wav\";","export default __webpack_public_path__ + \"static/media/320492__lacezio__clock-chime.9ae4accc.wav\";","import React, { useState, useReducer, useRef, useEffect } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport TaskCreator from \"./components/TaskCreator\";\r\nimport TaskManager from \"./components/TaskManager\";\r\nimport NavBar from \"./components/navbar/NavBar\";\r\nimport { CurrentSession, CurrentSessionEmpty } from \"./components/CurrentSession\";\r\nimport History from \"./components/History\";\r\n\r\nimport breakEndsAlarmSfx from \"./sounds/316837__lalks__alarm-02-short.wav\";\r\nimport sessionEndsAlarmSfx from \"./sounds/320492__lacezio__clock-chime.wav\";\r\n\r\nimport { getState, getCurrentTask} from \"./reducers/reducers\"\r\n\r\nimport {\r\n  updateTask,\r\n  createTask,\r\n  deleteTask,\r\n  pickTask,\r\n} from \"./actions\";\r\n\r\nimport {getTotalCycleLengthInSeconds} from \"./lib/pureFunctions\"\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const state = useSelector(getState)\r\n\r\n  const currentSession = useSelector(getCurrentTask)\r\n  \r\n  const {\r\n    sessionLengthInMinutes,\r\n    numberOfSessions,\r\n    breakLengthInMinutes,\r\n    alarmTimeStamps,\r\n    id,\r\n  } = currentSession;\r\n\r\n  const [elapsedTimeInSeconds, setElapsedTimeInSeconds] = useState(\r\n    currentSession.elapsedTimeInSeconds\r\n  );\r\n  const [isRunning, setIsRunning] = useState(currentSession.isRunning);\r\n  const [isPaused, setIsPaused] = useState(currentSession.isPaused);\r\n  const [isPlaying, setIsPlaying] = useState(currentSession.isPlaying);\r\n  const [nextTimeStampIndex, setNextTimeStampIndex] = useState(1);\r\n  const [nextTimeStamp, setNextTimeStamp] = useState(currentSession.alarmTimeStamps[0]);\r\n\r\n  const intervalID = useRef();\r\n  const audioRef = useRef();\r\n  const currentState = useRef();\r\n\r\n  const totalCycleLengthInSeconds = getTotalCycleLengthInSeconds(numberOfSessions, sessionLengthInMinutes, breakLengthInMinutes)\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    setElapsedTimeInSeconds(currentSession.elapsedTimeInSeconds)\r\n    setIsRunning(currentSession.isRunning)\r\n    setIsPaused(currentSession.isPaused)\r\n    setIsPlaying(currentSession.isPlaying)\r\n    setNextTimeStampIndex(1)\r\n    setNextTimeStamp(currentSession.alarmTimeStamps[0])\r\n\r\n    window.clearInterval(intervalID.current);\r\n      intervalID.current = null;\r\n   \r\n    if (currentSession.isRunning === true && !currentSession.isPaused) {\r\n      startTimer();\r\n    }\r\n\r\n  }, [id]);\r\n\r\n  /// TICK\r\n  useEffect(() => {\r\n    function checkIfAlarmIsToBeSetOff() {\r\n      const conditions = [\r\n        elapsedTimeInSeconds >= nextTimeStamp.timeStamp,\r\n        elapsedTimeInSeconds < nextTimeStamp.timeStamp + 5,\r\n      ];\r\n\r\n      if (conditions.every(condition => condition)) {\r\n        setIsPlaying(true);\r\n      } else {\r\n        setIsPlaying(false);\r\n      }\r\n    }\r\n\r\n    if (elapsedTimeInSeconds >= nextTimeStamp.timeStamp + 5) {\r\n      setNextTimeStampIndex((prev) => prev + 1);\r\n      setNextTimeStamp(alarmTimeStamps[nextTimeStampIndex]);\r\n    }\r\n\r\n    elapsedTimeInSeconds >= totalCycleLengthInSeconds && stopTimer();\r\n\r\n    checkIfAlarmIsToBeSetOff();\r\n\r\n    currentState.current = {\r\n      elapsedTimeInSeconds,\r\n      isRunning,\r\n      isPaused,\r\n      isPlaying,\r\n      nextTimeStampIndex,\r\n      nextTimeStamp,\r\n    };\r\n\r\n    dispatch(updateTask(currentState, id))\r\n  }, [\r\n    elapsedTimeInSeconds,\r\n    isRunning,\r\n    isPaused,\r\n    isPlaying,\r\n    nextTimeStampIndex,\r\n    nextTimeStamp,\r\n    totalCycleLengthInSeconds,\r\n    alarmTimeStamps,\r\n    id\r\n  ]);\r\n\r\n  /// UNMOUNTING\r\n  useEffect(() => {\r\n    return () => {\r\n      \r\n      window.clearInterval(intervalID.current);\r\n    };\r\n  }, []);\r\n\r\n\r\n  //////////////////////////////////////////////////////////////////////////////\r\n  function playAlarm() {\r\n    if (isPlaying) {\r\n      let audioSrc = null;\r\n      if (nextTimeStamp.status === \"sessionEnded\") {\r\n        audioSrc = sessionEndsAlarmSfx;\r\n      } else {\r\n        audioSrc = breakEndsAlarmSfx;\r\n      }\r\n      return (\r\n        <audio\r\n          ref={audioRef}\r\n          src={audioSrc}\r\n          autoPlay\r\n          loop={elapsedTimeInSeconds < totalCycleLengthInSeconds ? true : false}\r\n        ></audio>\r\n      );\r\n    }\r\n  }\r\n\r\n  function startTimer() {\r\n    \r\n    if (!intervalID.current) {\r\n      \r\n      intervalID.current = window.setInterval(() => {\r\n        setElapsedTimeInSeconds((prev) => prev + 1);\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  function resetTimeStamp() {\r\n    setNextTimeStamp(alarmTimeStamps[0]);\r\n  }\r\n\r\n  function handleStart() {\r\n    setIsRunning(true);\r\n    startTimer();\r\n  }\r\n\r\n  function stopTimer() {\r\n    window.clearInterval(intervalID.current);\r\n    intervalID.current = null;\r\n  }\r\n\r\n  function handleStop() {\r\n    stopTimer();\r\n    setElapsedTimeInSeconds(0);\r\n    setIsRunning(false);\r\n    setIsPaused(false);\r\n    resetTimeStamp();\r\n  }\r\n\r\n  function togglePause() {\r\n    setIsPaused((prev) => {\r\n      if (isPaused) {\r\n        startTimer();\r\n      } else {\r\n        stopTimer();\r\n      }\r\n      return !prev;\r\n    });\r\n  }\r\n\r\n  ////////////////////////////////////\r\n\r\n  const handleTaskCreation = (newTask) => {\r\n    dispatch(createTask(newTask))\r\n  };\r\n\r\n  const handleTaskPick = (task, indexToRemove) => {\r\n    dispatch(pickTask(task, indexToRemove))\r\n  };\r\n\r\n  const handleTaskDelete = (task) => {\r\n    dispatch(deleteTask(task))\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {isPlaying\r\n        ? playAlarm()\r\n        : null}\r\n      <NavBar />\r\n      <Route render={({ location }) => (\r\n        <TransitionGroup>\r\n          <CSSTransition key={location.key} timeout={450} classNames=\"fade\">\r\n            <Switch location={location}>\r\n              <Route path=\"/task-creator\" >\r\n                <TaskCreator\r\n                  onTaskCreation={handleTaskCreation}\r\n                />\r\n              </Route>\r\n              <Route path=\"/task-manager\" >\r\n                <TaskManager\r\n                  onTaskPick={handleTaskPick}\r\n                  onTaskDelete={handleTaskDelete}\r\n                  tasks={state.tasks}\r\n                />\r\n              </Route>\r\n              <Route path=\"/history\">\r\n                <History tasks={state.tasks}\r\n                />\r\n              </Route>\r\n              <Route exact path=\"/\">\r\n                {\r\n                  !currentSession ?\r\n                    <CurrentSessionEmpty />\r\n                    :\r\n                    <CurrentSession\r\n                      onStart={handleStart}\r\n                      onStop={handleStop}\r\n                      onTogglePause={togglePause}\r\n                      currentSession={currentSession}\r\n                      elapsedTimeInSeconds={elapsedTimeInSeconds}\r\n                      isPaused={isPaused}\r\n                      isRunning={isRunning}\r\n                    />\r\n                }\r\n\r\n              </Route>\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n      )} />\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","\r\nexport const updateTask = (currentState, id) => ({ type: 'TASK_UPDATE', currentState, id });\r\nexport const createTask = (task) => ({ type: 'TASK_CREATE', newTask: task });\r\nexport const deleteTask = (task) => ({ type: 'TASK_DELETE', taskToRemove: task});\r\nexport const pickTask = (task, indexToRemove) => ({ type: 'TASK_PICK', indexToRemove, task });\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\n\r\nimport './App.scss';\r\nimport {store} from \"./store\";\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <BrowserRouter>\r\n    <App path=\"/\" component={App}/>\r\n  </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}